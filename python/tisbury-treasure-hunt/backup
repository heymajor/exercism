def get_coordinate(record):
    """

    :param record: tuple - a (treasure, coordinate) pair.
    :return: str - the extracted map coordinate.
    """

    return record[1]


def convert_coordinate(coordinate):
    """

    :param coordinate: str - a string map coordinate
    :return:  tuple - the string coordinate seperated into its individual components.
    """

    return tuple(coordinate)


def compare_records(azara_record, rui_record):
    """

    :param azara_record: tuple - a (treasure, coordinate) pair.
    :param rui_record: tuple - a (location, coordinate, quadrant) trio.
    :return: bool - True if coordinates match, False otherwise.
    """
    return convert_coordinate(azara_record[1]) == rui_record[1]


def create_record(azara_record, rui_record):
    """

    :param azara_record: tuple - a (treasure, coordinate) pair.
    :param rui_record: tuple - a (location, coordinate, quadrant) trio.
    :return:  tuple - combined record, or "not a match" if the records are incompatible.
    """
    if convert_coordinate(azara_record[1]) != rui_record[1]:
        return "not a match"
    else:
        return azara_record + rui_record


def clean_up(combined_record_group):
    """

    :param combined_record_group: tuple of tuples - everything from both participants.
    :return: string of tuples separated by newlines - everything "cleaned". Excess coordinates and information removed.
    """
    output_list = []
    separator = ""
    for record in combined_record_group:

        treasure, _undesired, location, coordinate, quadrant = record
        new_record = (treasure, location, coordinate, quadrant)
        output_list.append(new_record)
        output_list.append("\n")

    return separator.join(str(x) for x in output_list)


# input_data = (
#     ("Scrimshaw Whale's Tooth", "2A", "Deserted Docks", ("2", "A"), "Blue"),
#     ("Brass Spyglass", "4B", "Abandoned Lighthouse", ("4", "B"), "Blue"),
# )

# input_data = (
#     ("Scrimshaw Whale's Tooth", "2A", "Deserted Docks", ("2", "A"), "Blue"),
#     ("Brass Spyglass", "4B", "Abandoned Lighthouse", ("4", "B"), "Blue"),
#     ("Robot Parrot", "1C", "Seaside Cottages", ("1", "C"), "Blue"),
#     ("Glass Starfish", "6D", "Tangled Seaweed Patch", ("6", "D"), "Orange"),
#     (
#         "Vintage Pirate Hat",
#         "7E",
#         "Quiet Inlet (Island of Mystery)",
#         ("7", "E"),
#         "Orange",
#     ),
#     (
#         "Pirate Flag",
#         "7F",
#         "Windswept Hilltop (Island of Mystery)",
#         ("7", "F"),
#         "Orange",
#     ),
#     ("Crystal Crab", "6A", "Old Schooner", ("6", "A"), "Purple"),
#     (
#         "Model Ship in Large Bottle",
#         "8A",
#         "Harbor Managers Office",
#         ("8", "A"),
#         "Purple",
#     ),
#     ("Angry Monkey Figurine", "5B", "Stormy Breakwater", ("5", "B"), "Purple"),
#     ("Carved Wooden Elephant", "8C", "Foggy Seacave", ("8", "C"), "Purple"),
#     (
#         "Amethyst  Octopus",
#         "1F",
#         "Aqua Lagoon (Island of Mystery)",
#         ("1", "F"),
#         "Yellow",
#     ),
#     ("Antique Glass Fishnet Float", "3D", "Spiky Rocks", ("3", "D"), "Yellow"),
#     (
#         "Silver Seahorse",
#         "4E",
#         "Hidden Spring (Island of Mystery)",
#         ("4", "E"),
#         "Yellow",
#     ),
# )
# print(clean_up(input_data))


# result_data = """(\"Scrimshaw Whale's Tooth\", 'Deserted Docks', ('2', 'A'), 'Blue')\n\
# ('Brass Spyglass', 'Abandoned Lighthouse', ('4', 'B'), 'Blue')\n\
# ('Robot Parrot', 'Seaside Cottages', ('1', 'C'), 'Blue')\n\
# ('Glass Starfish', 'Tangled Seaweed Patch', ('6', 'D'), 'Orange')\n\
# ('Vintage Pirate Hat', 'Quiet Inlet (Island of Mystery)', ('7', 'E'), 'Orange')\n\
# ('Pirate Flag', 'Windswept Hilltop (Island of Mystery)', ('7', 'F'), 'Orange')\n\
# ('Crystal Crab', 'Old Schooner', ('6', 'A'), 'Purple')\n\
# ('Model Ship in Large Bottle', 'Harbor Managers Office', ('8', 'A'), 'Purple')\n\
# ('Angry Monkey Figurine', 'Stormy Breakwater', ('5', 'B'), 'Purple')\n\
# ('Carved Wooden Elephant', 'Foggy Seacave', ('8', 'C'), 'Purple')\n\
# ('Amethyst  Octopus', 'Aqua Lagoon (Island of Mystery)', ('1', 'F'), 'Yellow')\n\
# ('Antique Glass Fishnet Float', 'Spiky Rocks', ('3', 'D'), 'Yellow')\n\
# ('Silver Seahorse', 'Hidden Spring (Island of Mystery)', ('4', 'E'), 'Yellow')\n"""

# print(result_data)


# print(
#     clean_up(
#         (
#             ("Brass Spyglass", "4B", "Abandoned Lighthouse", ("4", "B"), "Blue"),
#             (
#                 "Vintage Pirate Hat",
#                 "7E",
#                 "Quiet Inlet (Island of Mystery)",
#                 ("7", "E"),
#                 "Orange",
#             ),
#             ("Crystal Crab", "6A", "Old Schooner", ("6", "A"), "Purple"),
#         )
#     )
# )
